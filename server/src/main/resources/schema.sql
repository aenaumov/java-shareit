
CREATE TABLE IF NOT EXISTS USERS
    (
        USER_ID   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        USER_NAME VARCHAR(20),
        EMAIL     VARCHAR(30) NOT NULL,
        CONSTRAINT USER_PK PRIMARY KEY (USER_ID),
        CONSTRAINT UQ_USER_EMAIL UNIQUE (EMAIL)
    );

CREATE TABLE IF NOT EXISTS ITEMS
    (
        ITEM_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        ID_OWNER BIGINT NOT NULL,
        ITEM_NAME VARCHAR(50),
        ITEM_DESCRIPTION VARCHAR(200),
        ITEM_AVAILABLE BOOLEAN,
        REQUEST_ID BIGINT,
        CONSTRAINT ITEM_PK PRIMARY KEY (ITEM_ID),
        CONSTRAINT ID_OWNER_FK FOREIGN KEY (ID_OWNER) REFERENCES USERS (USER_ID)
    );

CREATE TABLE IF NOT EXISTS BOOKINGS
(
    BOOKING_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    START_BOOKING TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_BOOKING TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ITEM_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    CONSTRAINT BOOKING_PK PRIMARY KEY (BOOKING_ID),
    CONSTRAINT ITEM_ID_FK FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ITEM_ID),
    CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS COMMENTS
(
    COMMENT_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    COMMENT_TEXT VARCHAR(500),
    USER_ID BIGINT NOT NULL,
    ITEM_ID BIGINT NOT NULL,
    CREATED TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT COMMENT_PK PRIMARY KEY (COMMENT_ID),
    CONSTRAINT COMMENTS_ITEM_ID_FK FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ITEM_ID),
    CONSTRAINT AUTHOR_NAME_FK FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    REQUEST_ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    DESCRIPTION VARCHAR(200),
    REQUESTOR_ID BIGINT NOT NULL,
    CREATED TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT REQUEST_PK PRIMARY KEY (REQUEST_ID),
    CONSTRAINT REQUEST_REQUESTOR_FK FOREIGN KEY (REQUESTOR_ID) REFERENCES USERS (USER_ID)
);

CREATE INDEX FK_ITEMS_INDEX ON ITEMS (ID_OWNER);
CREATE INDEX FK_BOOKINGS_USER_ID_INDEX ON BOOKINGS (USER_ID);
CREATE INDEX FK_BOOKINGS_ITEM_ID_INDEX ON BOOKINGS (ITEM_ID);
CREATE INDEX FK_COMMENTS_ITEM_ID_INDEX ON COMMENTS (ITEM_ID);
CREATE INDEX FK_COMMENTS_USER_ID_INDEX ON COMMENTS (USER_ID);
CREATE INDEX FK_REQUESTS_REQUESTOR_ID_INDEX ON REQUESTS (REQUESTOR_ID);
